📌 PetBnB – Descrizione del Progetto

PetBnB è un’applicazione web full-stack ispirata al modello di Airbnb, pensata per mettere in contatto proprietari di animali domestici con host disposti ad ospitare animali nelle loro strutture.
Il sistema gestisce registrazioni utenti, pubblicazione di location, prenotazioni, ruoli e sicurezza attraverso token JWT.

L’obiettivo principale è fornire una piattaforma sicura, scalabile e modulare per la gestione delle strutture pet-friendly, sia lato utente che host.

🧱 Tecnologie Utilizzate
Ambito	Tecnologie
Backend	Java 17, Spring Boot 3
Sicurezza	Spring Security, JWT (JSON Web Token)
Persistenza Dati	JPA, Hibernate, H2/PostgreSQL
Validazioni	Bean Validation (Jakarta), custom exception handling
Testing (futuro)	JUnit, Mockito (non incluso attualmente)
Gestione delle eccezioni	@ControllerAdvice, DTO per errori personalizzati
Build tool	Maven
🧩 Architettura del progetto

Modello a tre livelli: Controller → Service → Repository ✔️

DTO pattern: per l’input/output tra client e server ✔️

Gestione ruoli: USER e HOST gestiti tramite enum e securityConfig ✔️

Sicurezza: JWT Token verificati tramite un filtro (OncePerRequestFilter) custom ✔️

Validazioni: su ogni campo tramite annotazioni standard + messaggi personalizzati ✔️

🚀 Roadmap dei rilasci
🔹 v1 – Core funzionalità (completata)

✔️ Completamente funzionante
✔️ Implementata nella tua versione corrente

📌 Funzionalità incluse:

Registrazione utente con ruolo (USER o HOST) ✔️

Login e autenticazione tramite JWT ✔️

Creazione e gestione delle location da parte dell'host ✔️

Visualizzazione delle location pubbliche (per tutti gli utenti) ✔️

Prenotazione location da parte degli utenti ✔️

Visualizzazione delle proprie prenotazioni ✔️

Eliminazione delle prenotazioni da parte dell'utente ✔️

Validazioni su tutti i dati inviati (es. date, prezzi, campi obbligatori) ✔️

Gestione delle eccezioni centralizzata (custom exception + error DTO) ✔️

🔹 v2 – Estensione UX/UI e dati utente (prossimo step consigliato)

💡 Da implementare

📌 Funzionalità previste:

Espansione dei dettagli della location ✔️

Endpoint per visualizzare e aggiornare il profilo utente (GET/PUT /users/me)✔️

Sezione "Le mie strutture" per l’host ✔️

Filtri di ricerca per location (città, prezzo)✔️

🔹 v3 – Upload immagini e gestione avanzata host (parzialmente presente)

✔️ Parte delle funzionalità già presenti (es. endpoint host)
💡 Upload immagini da implementare

📌 Funzionalità previste:

Upload immagini per le strutture (via FileSystem o cloud: AWS S3, Cloudinary…)

Riconoscimento automatico dell’host loggato

Gestione multipla delle immagini per location

🔹 v4 – Pagamenti e notifiche

💡 Fase avanzata (opzionale)

📌 Funzionalità previste:

Integrazione con Stripe o PayPal per prenotazioni reali

Invio notifiche via email (con Mailgun)

Chat tra utente e host (WebSocket o servizi esterni)